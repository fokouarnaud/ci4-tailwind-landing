@echo off
echo.
echo ===================================================================
echo  üßπ NETTOYAGE COMPLET RAILWAY - Keep Only Render Config
echo ===================================================================
echo.

set "FILES_DELETED=0"
set "DIRS_DELETED=0"

echo [1/3] üóëÔ∏è Suppression des fichiers Railway/Docker...
echo.

:: Supprimer tous les Dockerfiles
if exist "Dockerfile" (
    del "Dockerfile"
    echo ‚úÖ Dockerfile supprim√©
    set /a FILES_DELETED+=1
)

if exist "Dockerfile.simple" (
    del "Dockerfile.simple"
    echo ‚úÖ Dockerfile.simple supprim√©
    set /a FILES_DELETED+=1
)

if exist "Dockerfile.nobuild" (
    del "Dockerfile.nobuild"
    echo ‚úÖ Dockerfile.nobuild supprim√©
    set /a FILES_DELETED+=1
)

if exist "Dockerfile.fix403" (
    del "Dockerfile.fix403"
    echo ‚úÖ Dockerfile.fix403 supprim√©
    set /a FILES_DELETED+=1
)

if exist "Dockerfile.debug" (
    del "Dockerfile.debug"
    echo ‚úÖ Dockerfile.debug supprim√©
    set /a FILES_DELETED+=1
)

if exist "Dockerfile.verbose" (
    del "Dockerfile.verbose"
    echo ‚úÖ Dockerfile.verbose supprim√©
    set /a FILES_DELETED+=1
)

:: Supprimer .dockerignore
if exist ".dockerignore" (
    del ".dockerignore"
    echo ‚úÖ .dockerignore supprim√©
    set /a FILES_DELETED+=1
)

:: Supprimer railway.toml
if exist "railway.toml" (
    del "railway.toml"
    echo ‚úÖ railway.toml supprim√©
    set /a FILES_DELETED+=1
)

:: Supprimer .env.railway
if exist ".env.railway" (
    del ".env.railway"
    echo ‚úÖ .env.railway supprim√©
    set /a FILES_DELETED+=1
)

:: Supprimer le dossier docker/
if exist "docker\" (
    rmdir /s /q "docker"
    echo ‚úÖ Dossier docker/ supprim√©
    set /a DIRS_DELETED+=1
)

echo.
echo [2/3] üßπ Suppression des scripts Railway...
echo.

:: Supprimer scripts Railway sp√©cifiques
if exist "deploy-railway.bat" (
    del "deploy-railway.bat"
    echo ‚úÖ deploy-railway.bat supprim√©
    set /a FILES_DELETED+=1
)

if exist "debug-403.bat" (
    del "debug-403.bat"
    echo ‚úÖ debug-403.bat supprim√©
    set /a FILES_DELETED+=1
)

:: Supprimer documentation Railway
if exist "RAILWAY-FIX.md" (
    del "RAILWAY-FIX.md"
    echo ‚úÖ RAILWAY-FIX.md supprim√©
    set /a FILES_DELETED+=1
)

if exist "DEPLOY-RAILWAY.md" (
    del "DEPLOY-RAILWAY.md"
    echo ‚úÖ DEPLOY-RAILWAY.md supprim√©
    set /a FILES_DELETED+=1
)

echo.
echo [3/3] ‚úÖ V√©rification de la configuration Render...
echo.

:: V√©rifier que les fichiers Render sont pr√©sents
if exist "render.yaml" (
    echo ‚úÖ render.yaml - Configuration Render OK
) else (
    echo ‚ùå render.yaml manquant
)

if exist "apache.conf" (
    echo ‚úÖ apache.conf - Configuration Apache OK
) else (
    echo ‚ùå apache.conf manquant
)

if exist "RENDER-DEPLOY.md" (
    echo ‚úÖ RENDER-DEPLOY.md - Documentation Render OK
) else (
    echo ‚ùå Documentation Render manquante
)

:: V√©rifier structure CI4
if exist "public\index.php" (
    echo ‚úÖ public/index.php - CI4 OK
) else (
    echo ‚ùå CI4 structure probl√©matique
)

if exist "composer.json" (
    echo ‚úÖ composer.json - PHP dependencies OK
) else (
    echo ‚ùå composer.json manquant
)

if exist "package.json" (
    echo ‚úÖ package.json - Node.js dependencies OK
) else (
    echo ‚ùå package.json manquant
)

echo.
echo ===================================================================
echo  üìä R√âSUM√â DU NETTOYAGE
echo ===================================================================
echo.
echo üóëÔ∏è Fichiers supprim√©s : %FILES_DELETED%
echo üìÅ Dossiers supprim√©s : %DIRS_DELETED%
echo.
echo ‚ùå SUPPRIM√â - Configuration Railway :
echo    - Dockerfile* (tous les variants)
echo    - .dockerignore
echo    - railway.toml
echo    - .env.railway
echo    - docker/ (dossier complet)
echo    - deploy-railway.bat
echo    - debug-403.bat
echo    - RAILWAY-FIX.md
echo    - DEPLOY-RAILWAY.md
echo.
echo ‚úÖ CONSERV√â - Configuration Render :
echo    - render.yaml (Infrastructure as Code)
echo    - apache.conf (Configuration Apache optimis√©e)
echo    - RENDER-DEPLOY.md (Documentation)
echo    - fix-render-favicon.bat (Maintenance)
echo    - setup-render-yaml.bat (Setup)
echo.
echo ‚úÖ CONSERV√â - Code Application :
echo    - app/ (CodeIgniter 4)
echo    - public/ (Assets + Entry Point)
echo    - resources/ (Sources Tailwind/JS)
echo    - composer.json (PHP dependencies)
echo    - package.json (Node.js dependencies)
echo    - .env, .env.example (Configuration)
echo.

echo.
echo ===================================================================
echo  üéØ CONFIGURATION FINALE RENDER-ONLY
echo ===================================================================
echo.
echo üöÄ STACK SIMPLIFI√â :
echo    ‚úÖ Render.com : H√©bergement PHP natif
echo    ‚úÖ Infrastructure as Code : render.yaml
echo    ‚úÖ Performance optimis√©e : apache.conf
echo    ‚úÖ CI4 + Tailwind : Code application
echo.
echo üí° AVANTAGES APR√àS NETTOYAGE :
echo    ‚úÖ Plus de complexity Docker
echo    ‚úÖ Plus d'erreurs Railway 403
echo    ‚úÖ Configuration simple et claire
echo    ‚úÖ D√©ploiement fiable et rapide
echo    ‚úÖ Infrastructure maintenable
echo.
echo üìù COMMIT RECOMMAND√â :
echo.

:: Commit automatique du nettoyage
git add .
git add -u

git commit -m "cleanup: remove all Railway/Docker configuration, keep Render-only

REMOVED Railway/Docker files:
- All Dockerfile variants (simple, nobuild, fix403, debug, verbose)
- .dockerignore and railway.toml
- docker/ directory and related scripts
- Railway-specific documentation and scripts

KEPT Render configuration:
- render.yaml (Infrastructure as Code)
- apache.conf (optimized for Render)
- RENDER-DEPLOY.md (deployment guide)
- Core CI4 + Tailwind application code

Result: Clean, simple Render-only deployment ready for production"

if %errorlevel% equ 0 (
    echo ‚úÖ Nettoyage committ√©s
) else (
    echo ‚ö†Ô∏è Rien √† committer ou d√©j√† fait
)

echo.
echo üöÄ PROCHAINES √âTAPES :
echo.
echo 1. üì§ Push le nettoyage :
echo    git push origin main
echo.
echo 2. üåê D√©ploiement Render automatique :
echo    - Configuration render.yaml d√©tect√©e
echo    - Build et deploy automatiques
echo    - URL live en 3-5 minutes
echo.
echo 3. ‚úÖ V√©rification post-deploy :
echo    - Site accessible : https://ci4-tailwind-landing.onrender.com
echo    - Favicon fix appliqu√©
echo    - Performance optimis√©e
echo.
echo üí∞ CO√õT FINAL : 0‚Ç¨
echo    - Render : 750h gratuit/mois
echo    - Infrastructure as Code simple
echo    - Maintenance minimale
echo.

pause
